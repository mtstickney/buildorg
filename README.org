* The Service
  This application provides a basic service to compile org-mode
  documents to pdf. The app accepts file uploads from a provided form,
  and sends back a zip file of compiled pdfs and build logs, or a 500
  "Internal Server Error" error if the build  process fails entirely.

  By default, the services is accessible at the =/build/= url. GET
  requests to =/build/= will return the upload form, while POST requests can
  be used to upload files without using the form.

* Example
  : curl --form org_file=@myfile.org --form buildit=OK -o myfile.zip http://docs.foo.com/build/

* Usage
  1. Edit the configuration parameters at the top of the docbuild.py file. Note that if =DEBUG_MODE=
     is set to =True=, the service will only bind to localhost (there are security risks to exposing
     the debug interface to the outside world).
  2. Make sure the script is executable
      : chmod +x docbuild.py
  3. Run it:
      : docbuild.py

* Dependencies
  Requires the [[http://flask.pocoo.org/][Flask]]] framework, and (of
  course) Python. *Note*: at the time of writing,
  [[http://flask.pocoo.org/][Flask]] only supports Python 2.

* Future Work
  - Stop using Emacs to render these things (maybe use one of the libs
    [[http://orgmode.org/worg/org-tools/index.html][here]])
  - Have configuration parameters be specified on the command line instead of as global variables.
  - Clean up the document processing code a bit
  - Remove stale temp directories on server shutdown, instead of just on requests.
  - Better interface!
